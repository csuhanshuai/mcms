<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee  http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置</description>

	<!--开启注解-->
	<context:annotation-config />

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com" />



	<!-- 定义受环境影响易变的变量 -->
	<bean id="propertyConfigurer" class="com.qixin.platform.annotation.AnnotationBeanPostProcessor">
		<property name="localOverride" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/application.properties</value>
				<!-- <value>classpath*:/onlinepay.properties</value> -->
				<value>classpath*:/config.properties</value>
				
			</list>
		</property>
	</bean>
	
	<!--begin  第一数据源   -->
	<!-- c3p0 -->
	<bean id="dataSource01" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
 		
		<property name="driverClass"><value>${jdbc.driver}</value></property>
		<property name="jdbcUrl"><value>${jdbc.url}</value></property>
		<property name="user" ><value>${jdbc.username}</value></property>
		<property name="password"><value>${jdbc.password}</value></property>
		
		<property name="minPoolSize"><value>${c3p0.minPoolSize}</value></property>
		<property name="maxPoolSize"><value>${c3p0.maxPoolSize}</value></property> 
		<property name="initialPoolSize"><value>${c3p0.initialPoolSize}</value></property>
		<property name="maxIdleTime"><value>${c3p0.maxIdleTime}</value></property>
		<property name="acquireIncrement"><value>${c3p0.acquireIncrement}</value></property> 
		
		<property name="maxStatements"><value>${c3p0.maxStatements}</value></property>
		<property name="idleConnectionTestPeriod"><value>${c3p0.idleConnectionTestPeriod}</value></property>
		<property name="acquireRetryAttempts"><value>${c3p0.acquireRetryAttempts}</value></property> 
		<property name="breakAfterAcquireFailure"><value>${c3p0.breakAfterAcquireFailure}</value></property> 
		
		<property name="numHelperThreads"><value>${c3p0.numHelperThreads}</value></property> 
		<property name="acquireRetryDelay"><value>${c3p0.acquireRetryDelay}</value></property> 
		<property name="autoCommitOnClose"><value>${c3p0.autoCommitOnClose}</value></property> 
		<property name="forceIgnoreUnresolvedTransactions"><value>${c3p0.forceIgnoreUnresolvedTransactions}</value></property> 
		<property name="propertyCycle"><value>${c3p0.propertyCycle}</value></property> 
		<property name="testConnectionOnCheckout" value="false" />
		 
	</bean>
	
	<!-- Hibernate配置 -->
	<bean id="sessionFactory"  name="sessionFactory"  class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" >
		<property name="dataSource" ref="dataSource01" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> 
				<prop key="hibernate.jdbc.batch_size">${hibernate.batch_size}</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 配置 hibernate boolean型与 数据库 char(1) 的映射 -->
				<prop key="query.substitutions">true 1,false 0</prop>
<!-- 					<prop key="hibernate.query.factory_class">org.hibernate.hql.classic.ClassicQueryTranslatorFactory -->
<!-- 					</prop> --> 
				  <prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 最优化二级缓存 -->
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">/ehcache.xml</prop>
				<prop key="hibernate.connection.release_mode">after_statement</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.qixin.app.system.*.model</value>
				<value>com.qixin.app.system.config.model</value>
				<value>com.qixin.app.model</value>
				<value>com.qixin.app.exchange.*.model</value>
				<value>com.qixin.app.exchange.model</value>
				<value>com.qixin.app.*.model</value>
				<value>com.qixin.app.pay.alipay.model</value>
				<value>com.huawei.mcms.material.*.model</value>
			</list>
		</property>
		
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!--end  第一数据源   -->
	

	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!--视图资源位置-->
		<property name="templateLoaderPath"  value="/WEB-INF/ftl/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop><!-- 模板更新延时 -->
				<prop key="locale">zh_CN</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##</prop> 
			</props>
		</property>
		<!-- 全局变量部分 -->
		<property name="freemarkerVariables">
			<map>
				<entry key="BasePath" value="/mcms" />
				<entry key="domain" value="http://103.245.209.72/zj/" />
				<entry key="B2cTitle" value="" />
				<entry key="B2cDescription" value="" />
				<entry key="B2cKeywords" value="" />
				<!-- 应用于前台url在静态环境和开发环境中切换 200生产环境  500开发环境-->
				<entry key="model" value="500" />
				<entry key="BaseWms" value="wms" />
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
	<!-- Freemarker配置 -->
	<bean id="ftlviewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		 <property name="cache" value="true"/>
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl"></property>
	</bean>

	<!-- 邮件发送 -->
	<bean id="javaMaillSender"  class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="username" value="${mail.service.username}" />
		<property name="password" value="${mail.service.password}" />
		<property name="javaMailProperties">
			 <props>
			 	<prop key="mail.smtp.auth">true</prop>
			 </props>
		</property>
	</bean>
	
	<!-- 配置 EBM 邮件发送 -->
	<bean id="EBMailClient" class="com.qixin.platform.mail.commmon.EBMailClient">
		<constructor-arg>
    		<value>${ebm.mail.file}</value>
		</constructor-arg>
	</bean>
	
	<!-- 通过BeanFactoryAware，手动从spring容器获取bean -->
	<bean id="serviceLocator" class="com.qixin.platform.tools.ServiceLocator"></bean>

	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.qixin.app.system.web.String2DateConverter" />
			</list>
		</property>
	</bean>
	
	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
  
</beans>
